# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name
;

#Then I determined the top 10 most popular songs with a danceability score of at least .7. 

SELECT artist_name,
track_name,
popularity, 
danceability
FROM BIT_DB.spotifydata
WHERE danceability >= 0.7
GROUP BY track_name 
ORDER BY popularity DESC
LIMIT 10
; 

#What artist had released the longest song.  

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1
;

#What's the average danceability for the 10 most popular songs?

SELECT avg(danceability) 
FROM (SELECT * FROM Spotifydata ORDER BY popularity DESC LIMIT 10)
;

#What's the average danceability for the 10 most popular songs? (use CTEs to find your answer)
WITH songpopularity AS (
SELECT 
artist_name
    ,track_name
    ,popularity
    ,danceability
FROM Spotifydata 
ORDER BY popularity DESC LIMIT 10)

SELECT 
artist_name
    ,track_name
    ,AVG(danceability) AS average_danceability
FROM songpopularity
;

#Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH avg_popularity_CTE AS (
SELECT 
s.artist_name,
AVG(s.popularity) AS avg_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)

SELECT 
    artist_name,
    avg_popularity,
    'Top Star' AS tag
FROM avg_popularity_CTE
WHERE avg_popularity>=90
; 


